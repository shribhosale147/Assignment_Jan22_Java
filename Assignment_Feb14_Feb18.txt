**********************************************************************************************************************************************************************************
14-02-2022
**********************************************************************************************************************************************************************************
1.) https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/
class Demo {
    public int busyStudent(int[] startTime, int[] endTime, int queryTime) {
        int count=0;
        for(int i=0;i<startTime.length;i++){
            if(startTime[i]<=queryTime && endTime[i]>=queryTime){
                count++;
            }
        }
        return count;
    }
}


2.) https://leetcode.com/problems/running-sum-of-1d-array/
class Demo {
    public int[] runningSum(int[] nums) {
        for(int i=1;i<nums.length;i++){
            nums[i]+=nums[i-1];
        }
        return nums;
    }
}


3.)  Given two arrays, find the intersection between them?
        Input : int[]  arr1 = {1, 2, 3, 4, 5, 6};
                 int[] arr2 = {2, 3, 4, 7, 8};
        Output : { 2, 3, 4}

public static void arrInt(int arr[], int arr1[]){
        int temp[]=new int[arr1.length];
        int k=0;
        for (int i = 0; i <arr.length ; i++) {
            for (int j = 0; j <arr1.length ; j++) {
                if(arr[i]==arr1[j]){
                    temp[k]=arr1[j];
                    k++;
                }
            }
        }
        for (int i = 0; i <k ; i++) {
            System.out.print(temp[i]+" ");
        }

    }

4.)  Write a program to find second largest element in a given Array in java?"
class Demo {
    public int busyStudent(int[] startTime, int[] endTime, int queryTime) {
        int count=0;
        for(int i=0;i<startTime.length;i++){
            if(startTime[i]<=queryTime && endTime[i]>=queryTime){
                count++;
            }
        }
        return count;
    }
}

**********************************************************************************************************************************************************************************
15-02-2022
**********************************************************************************************************************************************************************************
"1. add two 2D matrices to get the result matrix (Add the elements at corresponding rows and columns positions)

public class Main
{
    public static void arrMatrixAdd(int arr[][], int arr1[][]){
        int res[][]=new int[arr.length][arr[0].length];
        if(arr.length!=arr1.length){
            return;
        }else{
            for (int i=0;i<arr.length; i++){
                for(int j=0;j<arr[0].length;j++){
                    res[i][j]=arr[i][j]+arr1[i][j];
                }
            } 
        }
        for (int p=0;p<res.length; p++){
                for(int q=0;q<res[0].length;q++){
                    System.out.print(res[p][q]+" ");
                }
                System.out.println();
            } 
        
    }
	public static void main(String[] args) {
		int arr[][]={{1,5,7},
                    {2,6,8},
                    {5,8,2}};
        int arr1[][]={{1,3,4},
                    {2,1,4},
                    {7,6,9}};
        arrMatrixAdd(arr,arr1);
	}
}

2. Given an M Ã— N integer matrix, print it in spiral order
   Input:
 
	[  1   2   3   4  5 ]
	[ 16  17  18  19  6 ]
	[ 15  24  25  20  7 ]
	[ 14  23  22  21  8 ]
	[ 13  12  11  10  9 ]
 
	Output:
 
		1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25

	private static void printMatrixInSpiralOrder(int[][] mat) {
		int top = 0, left = 0, bottom = mat.length - 1, right = mat[0].length - 1;
		if (mat == null || mat.length == 0 || left > right)
			return;
		while (top <= bottom && left <= right) {
			// for top row
			for (int i = left; i <= right; i++) {
				System.out.print(mat[top][i] + " ");
			}
			top++;
			if (top > bottom)
				return;
			// for right column
			for (int i = top; i <= bottom; i++) {
				System.out.print(mat[i][right] + " ");
			}
			right--;
			if (left > right)
				return;
			// print bottom
			for (int i = right; i >= left; i--) {
				System.out.print(mat[bottom][i] + " ");
			}
			bottom--;
			if (top > bottom)
				return;
			for (int i = bottom; i >= top; i--) {
				System.out.print(mat[i][left] + " ");
			}
			left++;
		}
	}

		
3.  Change all elements of row `i` and column `j` in a matrix to 0 if cell `(i, j)` is 0
	Input :
		[ 1  1  0  1  1 ]
		[ 1  1  1  1  1 ]
		[ 1  1  1  0  1 ]
		[ 1  1  1  1  1 ]
		[ 0  1  1  1  1 ]
 
	Output:
 
		[ 0  0  0  0  0 ]
		[ 0  1  0  0  1 ]
		[ 0  0  0  0  0 ]
		[ 0  1  0  0  1 ]
		[ 0  0  0  0  0 ]"

	private static void convertMatrix(int[][] mat) {
		if(mat.length==0)	return;
		int row=mat.length;
		int col=mat[0].length;
		for(int i=0;i<row;i++) {
			for(int j=0;j<col;j++) {
				if(mat[i][j]==0) {
					for(int k=0;k<row;k++) {
						if(mat[i][k]!=0)
							mat[i][k]=-1;
					}
					for (int l = 0; l < col; l++){
			            if (mat[l][j] != 0)
			                mat[l][j] = -1;
			        }
				}
			}
		}
		for (int i = 0; i < row; i++){
            for (int j = 0; j < col; j++){
                if (mat[i][j] == -1) {
                    mat[i][j] = 0;
                }
            }
        }
		print2DMatrix(mat);
}
**********************************************************************************************************************************************************************************
16-02-2022
**********************************************************************************************************************************************************************************
"1.Find the frequency of odd and even in given matrix

Input : 
[1  3  5]
[2  4  1]
[7  8  9]

Output :
Even = 3
Odd = 6

public class Demo{
    public static void matrixSymetric(int arr[][]) {


        int even=0,odd=0;
            for (int[] i:arr) {
                for (int j:i) {
                    if(j%2==0){
                        even++;
                    }else{
                        odd++;
                    }
                }
            }
        System.out.println("Even:"+even);
        System.out.println("Odd:"+odd);

    }
    public static void main(String args[]){
        int arr[][]={{1,3,5},{2,4,1},{7,8,9}};
        matrixSymetric(arr);
    }
}

2.Find the sum of anti diagonal elements in given matrix

Input :

[1 5 7]
[2 6 8]
[5 8 2]

Anti diagonal elements are = a[0][2] + a[1][1] + a[2][0]

Output : 18

public class Demo{
    public static void matrixAnti(int arr[][]) {


        int ant=0;
        for (int i=0;i<arr.length;i++){
            for (int j=arr[0].length-1;j>=0;j--){
                if(i+j==arr.length-1){
                    ant+=arr[i][j];
                }
            }
        }
        System.out.println("add: "+ant);
    }
    public static void main(String args[]){
        int arr[][]={{1,5,7},
                    {2,6,8},
                    {5,8,2}};
        matrixAnti(arr);
    }
}

3.Display the string represented by each row of given matrix.

Input:

[""Hello""  ""Geekster""]
[""Good""  ""Day""]

Output:
Row 0 : HelloGeekster
Row 1 : GoodDay
	private static void printMatrixRow(String[][] mat) {
		int row=0;
		for(String[] val:mat) {
			System.out.println("Row "+(row++)+" : "+String.join("",val));
		}
	}

**********************************************************************************************************************************************************************************
17-02-2022
**********************************************************************************************************************************************************************************
"1.)  Write a program to check for lower triangular matrix

private static boolean isLowerTriangularMatrix(int[][] mat) {
		if(mat.length!=mat[0].length) {
			return false;
		}
		for(int i=0;i<mat.length;i++) {
			for(int j=i+1;j<mat[0].length;j++) {
				if(mat[i][j]!=0) {
					return false;
				}
			}
		}
		return true;
	}
2.)  Find the sum of diagonal elements of a matrix
private static void sumOfDiagonalMatrix(int[][] mat) {
		int row=mat.length,col=mat[0].length;
		int sum1=0,sum2=0;
		for(int i=0;i<col;i++) {
			sum1+=mat[i][i];
			sum2+=mat[i][col-i-1];
		}
		System.out.println("Sum Of Diagonal 1:"+sum1);
		System.out.println("Sum Of Diagonal 2:"+sum2);
	}

3.)  Check whether the matrix is sparse."

private static boolean isMatrixSparse(int[][] mat) {
		int row=mat.length,col=mat[0].length;
		int count=0,size=row*col;
		for(int i=0;i<row;i++) {
			for(int j=0;j<col;j++) {
				if(mat[i][j]==0) {
					count++;
				}
			}
		}
		return count>(size/2);
	}


**********************************************************************************************************************************************************************************
18-02-2022
**********************************************************************************************************************************************************************************
1.) Create a class named 'Student' with String variable 'name' and integer variable 'roll_no'. Assign the value of roll_no as '2' 
and that of name as "John" by creating an object of the class Student. 

2.)Assign and print the roll number, phone number and address of two students having names "Sam" and "John" respectively by creating two objects of class 'Student'. 

3.) Create a class 'Employee' with String variable 'name' and integer variable 'employee id'. Create 4 Employee objects and store in array and display.

class Student{
	String name;
	Integer roll;
	String phone;
	String address;
	public Student(String name, Integer roll, String phone, String address) {
		super();
		this.name = name;
		this.roll = roll;
		this.phone = phone;
		this.address = address;
	}
	void display() {
		System.out.println("Name: "+name);
		System.out.println("Roll: "+roll);
		System.out.println("Mobile: "+phone);
		System.out.println("Address: "+address);
	}

}
class Employee{
	String name;
	Integer empId;
	public Employee(String name, Integer empId) {
		super();
		this.name = name;
		this.empId = empId;
	}
	public void display() {
		System.out.println("Employee id = " + empId);
		System.out.println("Employee name = " + name);
	}
}
public class  Main{
	public static void main(String[] args) {
		

		Student student1=new Student("John", 5,"9876543210","Agra");
		Student student2=new Student("Sam", 8,"98765456789","Delhi");
		student1.display();
		student2.display();

		Employee emp[]=new Employee[4];
		emp[0]=new Employee("Ram", 123);
		emp[1]=new Employee("Sam", 332);
		emp[2]=new Employee("John", 654);
		emp[3]=new Employee("Rock", 899);

		for(Employee employee:emp) {
			employee.display();
		}

	}